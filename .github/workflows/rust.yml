name: Rust

on:
  push:
    branches: [ "master" ]
  
  pull_request:
    branches: [ "master" ]

concurrency:
  group: rust-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        run: rustup toolchain install stable --profile minimal --component clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install SARIF utils
        run: cargo install clippy-sarif sarif-fmt

      - name: Run clippy
        run: cargo clippy --message-format=json | clippy-sarif | tee results.sarif | sarif-fmt

      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          wait-for-processing: true

  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        run: rustup toolchain install stable --profile minimal

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo llvm-cov --all-features --workspace --codecov --output-path codecov-unit.json

      - name: Test docs
        run: cargo test --doc

      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: codecov-unit
          path: codecov-unit.json

  publish-crates:
    if: ${{ github.event_name == 'push' }}
    name: Publish to crates.io

    runs-on: ubuntu-latest
    environment: crates.io
    needs: [lint, unit-tests]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        run: rustup toolchain install stable --profile minimal

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: SemVer Checks
        uses: obi1kenobi/cargo-semver-checks-action@v2
        with:
          rust-toolchain: manual

      - name: Publish
        uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  wasm-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        run: rustup toolchain install stable --profile minimal

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install wasm-pack
        uses: taiki-e/install-action@wasm-pack

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: wasm-pack test --firefox --headless
        working-directory: wasm

  publish-npm:
    if: ${{ github.event_name == 'push' }}
    name: Publish to npm

    runs-on: ubuntu-latest
    environment: npm
    needs: [lint, wasm-tests]

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.x
          registry-url: https://registry.npmjs.org

      - name: Setup Rust stable
        run: rustup toolchain install stable --profile minimal

      - name: Install wasm-pack
        uses: taiki-e/install-action@wasm-pack

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: wasm-pack build -s jujulego --weak-refs
        working-directory: wasm

      - name: Publish
        run: yarn npm publish --access public --tolerate-republish
        working-directory: wasm/pkg
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  codecov:
    if: ${{ !startsWith(github.head_ref, 'renovate/') }}
    runs-on: ubuntu-latest
    needs: [unit-tests]

    steps:
      - uses: actions/checkout@v3

      - name: Download unit coverage
        uses: actions/download-artifact@v3
        with:
          name: codecov-unit

      - name: Upload unit coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: codecov-unit.json
          flags: unit
          fail_ci_if_error: true
