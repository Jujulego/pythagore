name: Rust

on:
  push:
    branches: [ "master" ]
  
  pull_request:
    branches: [ "master" ]

concurrency:
  group: rust-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        run: rustup toolchain install stable --profile minimal --component clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install SARIF utils
        run: cargo install clippy-sarif sarif-fmt

      - name: Run clippy
        run: cargo clippy --message-format=json | clippy-sarif | tee results.sarif | sarif-fmt

      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          wait-for-processing: true

  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        run: rustup toolchain install stable --profile minimal

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test -v

  publish:
    if: ${{ github.event_name == 'push' }}

    runs-on: ubuntu-latest
    environment: crates.io
    needs: [lint, tests]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        run: rustup toolchain install stable --profile minimal

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build

      - name: Read version
        id: status
        run: |
          VERSION=$(cargo metadata --format-version 1 | jq -r '.packages | map(select(.name == "pythagore")) | .[0].version')
          TAG="v$VERSION"
          
          echo "::group::Load tags"
          
          git fetch --tags
          
          echo "::endgroup::"
          
          if [[ $(git tag -l $TAG) == $TAG ]]; then
            echo "::notice::Version $VERSION already published"
          else
            echo "publish=true" >> $GITHUB_OUTPUT
          fi
          
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Publish
        if: ${{ steps.status.outputs.publish }}
        run: cargo publish -v
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Tag ${{ steps.status.outputs.version }}
        if: ${{ steps.status.outputs.publish }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          
          git tag ${{ steps.status.outputs.tag }}
          git push --tags

      - name: Release notes
        if: ${{ steps.status.outputs.publish }}
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.status.outputs.version }}
          tag_name: v${{ steps.status.outputs.tag }}
          draft: true
          generate_release_notes: true
